// Generated by CoffeeScript 1.6.3
(function() {
  var Log, increment_id, pad, str_repeat, timestamp, tz_offset;

  pad = require('./pad');

  str_repeat = require('./str_repeat');

  timestamp = require('./timestamp');

  tz_offset = require('./timezone_offset');

  increment_id = 0;

  Log = (function() {
    function Log(threaded) {
      var stamp;
      this.threaded = threaded != null ? threaded : false;
      increment_id += 1;
      this.id = increment_id;
      this.t = new Date;
      this.lines = [];
      this.lines_t = [];
      stamp = timestamp(this.t) + '.' + pad(this.t.getMilliseconds(), 3) + tz_offset(this.t);
      this.header = stamp + ' [' + this.id + '] ';
      this.spc = str_repeat(' ', this.header.length);
    }

    Log.prototype.push = function(msg) {
      var header, t_diff;
      t_diff = this.get_t_diff();
      this.lines_t.push(t_diff);
      this.lines.push(msg);
      if (!this.threaded) {
        header = this.header;
        if (this.lines.length !== 1) {
          header = '+' + t_diff + 'ms [' + this.id + '] ';
          header = this.spc.substr(0, this.spc.length - header.length) + header;
        }
        console.log(header + msg);
      }
      return this;
    };

    Log.prototype.flush = function() {
      var line, pre, t;
      if (this.threaded) {
        if (this.lines.length) {
          console.log(this.header + this.lines[0]);
          this.lines.shift();
          this.lines_t.shift();
          while (this.lines.length) {
            line = this.lines.shift();
            t = this.lines_t.shift();
            pre = '                   ' + String(t) + 'ms';
            console.log(pre.substr(pre.length - 8) + ' . ' + line);
          }
        }
      }
      return this;
    };

    Log.prototype.get_t_diff = function() {
      return (new Date).getTime() - this.t.getTime();
    };

    return Log;

  })();

  module.exports = Log;

}).call(this);
